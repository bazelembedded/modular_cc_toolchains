load("@modular_cc_toolchain//cc:features.bzl", "cc_feature", "action_mux")
load("//cc:action_names.bzl", "ACTION_NAME_GROUPS")
load("//cc:actions.bzl", "cc_action_config")
load("@rules_cc//cc:action_names.bzl", "ACTION_NAMES")

cc_feature(
    name = "garbage_collect_sections",
    action_flags = action_mux({
        # Put each function and global var in their own linker section.
        ACTION_NAME_GROUPS.all_cc_compile_actions: ["-ffunction-sections", "-fdata-sections"],
        # Remove unused functions/symbols from linked binary.
        ACTION_NAME_GROUPS.all_cc_link_actions: ["-Wl,--gc-sections"],
    }),
    doc = "Place each function in it's own section so that the linker can discard unused functions",
    deps = [":default_clang"],
)

cc_action_config(
    name = "default_clang",
    action_tools = {
        ACTION_NAMES.c_compile: "@clang_llvm_x86_64_linux_gnu_ubuntu//:bin/clang",
    }
)

filegroup(
    name = "bzl_srcs",
    srcs = glob(["*.bzl"]),
    visibility = ["//visibility:public"],
)

exports_files(glob(["*.bzl"])) 