load("@modular_cc_toolchain//cc:features.bzl", "cc_feature", "action_mux")
load("//cc:action_names.bzl", "ACTION_NAME_GROUPS")
load("@rules_cc//cc:action_names.bzl", "ACTION_NAMES")

cc_feature(
    name = "garbage_collect_sections",
    action_flags = action_mux({
        # Put each function and global var in their own linker section.
        ACTION_NAME_GROUPS.all_cc_compile_actions: ["-ffunction-sections", "-fdata-sections"],
        # Remove unused functions/symbols from linked binary.
        ACTION_NAME_GROUPS.all_cc_link_actions: ["-Wl,--gc-sections"],
    }),
    doc = "Place each function in it's own section so that the linker can discard unused functions",
)

cc_feature(
    name = "dependency_file",
    enabled = True,
    action_flags = action_mux({
        (ACTION_NAMES.assemble,
        ACTION_NAMES.preprocess_assemble,
        ACTION_NAMES.c_compile,
        ACTION_NAMES.cpp_compile,
        ACTION_NAMES.cpp_module_compile,
        ACTION_NAMES.objc_compile,
        ACTION_NAMES.objcpp_compile,
        ACTION_NAMES.cpp_header_parsing,
        ACTION_NAMES.clif_match): [
            "-MD",
            "-MF",
            "%{dependency_file}",
        ]
    })
)


